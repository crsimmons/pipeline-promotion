resource_types:
- name: build-metadata
  type: docker-image
  source:
    repository: mastertinner/build-metadata-resource

resources:
- name: pipeline-promotion
  type: git
  source:
    uri: https://github.com/crsimmons/pipeline-promotion.git

- name: cf-deployment
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-deployment

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: cf-smoke-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-smoke-tests.git
    branch: master

- name: build-metadata
  type: build-metadata

- name: pcf-ops-image
  type: docker-image
  source:
    repository: engineerbetter/pcf-ops

# - name: semver-trigger
#   type: semver
#   source:
#     <<: &aws_creds_and_region
#       access_key_id: ((aws_access_key_id))
#       region_name: ((aws_region))
#       secret_access_key: ((aws_secret_access_key))
#     driver: s3
#     bucket: ((meta-bucket))
#     key: ((foundation))-trigger

# - name: versions-passed-bucket
#   type: s3
#   source:
#     <<: *aws_creds_and_region
#     bucket: ((meta-bucket))
#     versioned_file: ((foundation))-versions.yml

jobs:
- name: terraform
  plan:
  - aggregate:
    # - get: semver-bucket
    #   trigger: true
    - get: pipeline-promotion
      # version: ((resource_version_pipeline-promotion))
    - get: pcf-ops-image
      trigger: true
      # version: ((resource_version_pcf-ops-image))
  - task: terraform
    image: pcf-ops-image
    file: pipeline-promotion/tasks/terraform.yml
    params:
      PIPELINE_PROMOTION_VERSION: ((resource_version_pipeline-promotion))

- name: deploy-director
  plan:
  - aggregate:
    # - get: semver-bucket
    #   trigger: true
    #   passed: [terraform]
    - get: bosh-deployment
      trigger: true
      # version: ((resource_version_bosh-deployment))
    - get: pipeline-promotion
      passed: [terraform]
    - get: pcf-ops-image
      trigger: true
      passed: [terraform]
  - task: deploy-director
    image: pcf-ops-image
    # file: pipeline-promotion/tasks/deploy-director.yml
    params:
      BOSH_DEPLOYMENT_VERSION: ((resource_version_bosh-deployment))

- name: deploy-cf
  plan:
  - aggregate:
    # - get: semver-bucket
    #   trigger: true
    #   passed: [deploy-director]
    - get: cf-deployment
      trigger: true
      # version: ((resource_version_cf-deployment))
    - get: bosh-deployment
      trigger: true
      passed: [deploy-director]
    - get: pipeline-promotion
      passed: [deploy-director]
    - get: pcf-ops-image
      trigger: true
      passed: [deploy-director]
  - task: deploy-cf
    image: pcf-ops-image
    file: pipeline-promotion/tasks/deploy-cf.yml
    params:
      CF_DEPLOYMENT_VERSION: ((resource_version_cf-deployment))

- name: smoke-test
  plan:
  - aggregate:
    # - get: semver-bucket
    #   trigger: true
    #   passed: [deploy-cf]
    - get: cf-smoke-tests
      trigger: true
      # version: ((resource_version_cf-smoke-tests))
    - get: cf-deployment
      trigger: true
      passed: [deploy-cf]
    - get: bosh-deployment
      trigger: true
      passed: [deploy-cf]
    - get: pipeline-promotion
      passed: [deploy-cf]
    - get: pcf-ops-image
      trigger: true
      passed: [deploy-cf]
  - task: smoke-test
    image: pcf-ops-image
    file: pipeline-promotion/tasks/smoke-test.yml
    params:
      SMOKE_TESTS_VERSION: ((resource_version_cf-smoke-tests))

# - name: promote-versions
#   plan:
#   - aggregate:
#     - get: semver-bucket
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: prometheus-git
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: prometheus-release
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: cf-smoke-tests
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: cf-deployment
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: bosh-deployment
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: pipeline-promotion
#       passed: [deploy-prometheus]
#     - get: pcf-ops-image
#       trigger: true
#       passed: [deploy-prometheus]
#     - get: build-metadata
#   - task: generate-versions
#     image: pcf-ops-image
#     file: pipeline-promotion/tasks/generate-versions.yml
#     params:
#       CONCOURSE_URL: ((concourse_url))
#       CONCOURSE_USERNAME: ((concourse_username))
#       CONCOURSE_PASSWORD: ((concourse_password))
  # - put: versions-passed-bucket
  #   params:
  #     file: resource-versions/versions.yml
  #     acl: private
